class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {

        List<List<String>> output = new ArrayList();
        HashMap<HashMap, List<String>> lookup = new HashMap<HashMap, List<String>>();

        for (int i = 0; i < strs.length; ++i) {
            String[] characters = strs[i].split("");

            HashMap<String, Integer> pattern = new HashMap<String, Integer>();

            for (int j = 0; j < characters.length; ++j) {
                pattern.merge(characters[j], 1, Integer::sum);
            }

            if (lookup.containsKey(pattern)) {
                List<String> holder = lookup.get(pattern);
                holder.add(strs[i]);
                lookup.put(pattern, holder);
            } else {
                List<String> holder = new ArrayList<String>();
                holder.add(strs[i]);
                lookup.put(pattern, holder);
            }

        }

        // loop through strs, store pattern of each as a map, inside another map with
        // pattern: index (array)

        lookup.forEach((key, value) -> {
            output.add(value);
        });

        return output;
    }
}
